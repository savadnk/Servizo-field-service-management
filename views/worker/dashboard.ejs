  <style>


    body{ background: var(--bg); color: var(--txt); }

    .dash-title{ color: var(--txt); }

    .stat-card{
      background: var(--panel);
      border: 1px solid var(--line);
      border-radius: 12px;
      padding: 16px 16px;
      box-shadow: 0 6px 20px rgba(0,0,0,0.35);
      height: 100%;
    }

    .stat-card h6{
      color: var(--text-300);
      font-size: 14px;
      margin-bottom: 6px;
      font-weight: 600;
      letter-spacing: .2px;
    }

    .stat-value{
      font-size: clamp(22px, 3.4vw, 28px);
      font-weight: 700;
      color: var(--txt);
      display: inline-flex;
      align-items: baseline;
      gap: 6px;
    }

    .stat-sub{
      color: var(--grey);
      font-size: 12px;
      margin-top: 2px;
    }

    .value-green{ color: var(--green); }
    .value-blue{ color: var(--blue); }
    .value-amber{ color: var(--amber); }
    .value-cyan{ color: var(--cyan); }

    /* Upcoming list */
    .schedule-wrap{
      background: var(--panel);
      border: 1px solid var(--line);
      border-radius: 12px;
      overflow: hidden;
    }

    .schedule-head{
      padding: 12px 14px;
      background: var(--row);
      border-bottom: 1px solid var(--line);
      color: var(--txt);
      font-weight: 600;
    }

    .list-group{
      --bs-list-group-bg: transparent;
      --bs-list-group-color: var(--txt);
      --bs-list-group-border-color: var(--line);
    }

    .list-group-item{
      background: var(--panel);
      color: var(--txt);
      border-color: var(--line);
    }

    .list-group-item + .list-group-item{
      border-top-color: var(--line);
    }

    .badge-green{
      background: rgba(34,197,94,.15);
      color: var(--green);
      border: 1px solid rgba(34,197,94,.35);
      padding: 6px 10px;
      border-radius: 999px;
      font-weight: 600;
    }

    .muted{ color: var(--muted); }

    /* Icon chips in cards */
    .card-icon{
      width: 36px; height: 36px; border-radius: 8px;
      display: inline-grid; place-items: center;
      background: var(--surface);
      border: 1px solid var(--line);
      color: var(--text-300);
    }

    /* Card grid spacing */
    .g-16{ --bs-gutter-x: 1rem; --bs-gutter-y: 1rem; }

    /* Focus styles for accessibility */
    a.btn:focus, button:focus, .list-group-item:focus{
      outline: 2px solid var(--focus) !important;
      outline-offset: 2px;
    }

     .card{
    background: var(--panel) !important;
    border: 1px solid var(--line) !important;
    border-radius: 12px !important;
    color: var(--txt);
  }
  .card h5{ color: var(--text-100); }

  .card .chart-wrap {
  position: relative;
  height: 260px;                        /* match canvas height */
}

    #performanceChart,
#earningsChart {
  width: 100% !important;
  height: 400px !important;           
  display: block;                     
}
  </style>

  <div class="container mt-4">
    <h2 class="dash-title mb-4">Worker Dashboard</h2>

    <div class="row g-16">
      <!-- Jobs Completed -->
      <div class="col-md-4">
        <div class="stat-card text-start">
          <div class="d-flex align-items-center justify-content-between">
            <h6>Jobs Completed</h6>
            <span class="card-icon"><i class="ri-verified-badge-line"></i></span>
          </div>
          <div class="stat-value value-green"><%= jobsCompleted %></div>
          <div class="stat-sub">Last 30 days</div>
        </div>
      </div>

      <!-- Customer Rating -->
      <div class="col-md-4">
        <div class="stat-card text-start">
          <div class="d-flex align-items-center justify-content-between">
            <h6>Customer Rating</h6>
            <span class="card-icon"><i class="ri-star-smile-line"></i></span>
          </div>
          <div class="stat-value value-amber"><%= avgRating %></div>
          <div class="stat-sub">Avg rating</div>
        </div>
      </div>

      <!-- New Jobs -->
      <div class="col-md-4">
        <div class="stat-card text-start">
          <div class="d-flex align-items-center justify-content-between">
            <h6>New Jobs</h6>
            <span class="card-icon"><i class="ri-notification-3-line"></i></span>
          </div>
          <div class="stat-value value-blue"><%= newJobs %></div>
          <div class="stat-sub">Awaiting acceptance</div>
        </div>
      </div>

      <!-- Active Jobs -->
      <div class="col-md-4">
        <div class="stat-card text-start">
          <div class="d-flex align-items-center justify-content-between">
            <h6>Active Jobs</h6>
            <span class="card-icon"><i class="ri-briefcase-4-line"></i></span>
          </div>
          <div class="stat-value value-cyan"><%= activeJobs %></div>
          <div class="stat-sub">Currently in progress</div>
        </div>
      </div>

      <!-- Revenue -->
      <div class="col-md-4">
        <div class="stat-card text-start">
          <div class="d-flex align-items-center justify-content-between">
            <h6>Revenue</h6>
            <span class="card-icon"><i class="ri-currency-line"></i></span>
          </div>
          <div class="stat-value value-green">₹<%= revenue.toFixed(2) %></div>
          <div class="stat-sub">This month</div>
        </div>
      </div>

      
    </div>

    

    <!-- Upcoming Schedule -->
    <div class="mt-5">
      <h3 class="dash-title mb-3">Upcoming Schedule</h3>
      <div class="row g-3">
        <% if (upcomingSchedule && upcomingSchedule.length > 0) { %>
          <% upcomingSchedule.forEach(job => { %>
            <div class="col-md-6 col-lg-4">
              <div class="stat-card h-100 d-flex flex-column">
                <div class="d-flex justify-content-between align-items-start mb-2">
                  <h6 class="mb-0"><%= job.serviceType %></h6>
                  <span class="badge-green flex-shrink-0"><%= new Date(job.deadline).toLocaleDateString() %></span>
                </div>
                <div class="d-flex align-items-center gap-2 mb-3">
                  <i class="ri-user-line muted"></i>
                  <span class="muted fs-6"><%= job.customer.name %></span>
                </div>
                <div class="d-flex align-items-start gap-2">
                  <i class="ri-map-pin-line muted mt-1"></i>
                  <span class="stat-sub d-block"><%= job.address.street %>, <%= job.address.city %>, <%= job.address.pincode %></span>
                </div>
                
              </div>
            </div>
          <% }) %>
        <% } else { %>
          <div class="col-12"><p class="text-center muted">No upcoming jobs scheduled in the next 7 days.</p></div>
        <% } %>
      </div>
    </div>
  </div>

  <div class="container mt-5">
  <h3 class="fw-bold mb-4 text-center">Performance Analytics</h3>
  <div class="row">
    <!-- ===== Chart 1: Performance Tracker ===== -->
    <div class="col-md-6 mb-4">
      <div class="card p-3 shadow-sm">
        <h5 class="text-center mb-3 fw-bold">Performance Tracker</h5>
        <canvas id="performanceChart" ></canvas>
      </div>
    </div>

    <!-- ===== Chart 2: Earnings Trend ===== -->
    <div class="col-md-6 mb-4">
      <div class="card p-3 shadow-sm">
        <h5 class="text-center mb-3 fw-bold">Earnings Trend (Last 6 Months)</h5>
        <canvas id="earningsChart" ></canvas>
      </div>
    </div>
  </div>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
  // Shared dark theme pieces
  const darkScales = {
    x: { grid: { color: 'rgba(35,39,53,0.6)' }, ticks: { color: getCss('--muted') } },
    y: { grid: { color: 'rgba(35,39,53,0.6)' }, ticks: { color: getCss('--muted') }, beginAtZero: true }
  };
  const darkLegend = { labels: { color: getCss('--muted'), boxWidth: 10, boxHeight: 10 }, position: 'bottom' };
  const darkTooltip = {
    backgroundColor: getCss('--panel'),
    titleColor: getCss('--txt'),
    bodyColor: getCss('--txt'),
    borderColor: getCss('--line'),
    borderWidth: 1
  };
  function getCss(v){ return getComputedStyle(document.documentElement).getPropertyValue(v).trim(); }

  // ===== Chart 1: Performance Tracker (bar)
  const performanceData = <%- JSON.stringify(performanceData) %>;
  new Chart(document.getElementById("performanceChart"), {
    type: "bar",
    data: {
      labels: ["Completed Jobs", "Average Rating"],
      datasets: [{
        label: "Performance",
        data: [performanceData.completedJobs, performanceData.avgRating],
        backgroundColor: [getCss('--blue'), getCss('--green')],
        borderColor: getCss('--line'),
        borderWidth: 1,
        borderRadius: 6,
        barPercentage: 0.6,
        categoryPercentage: 0.6
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      plugins: { legend: { display: false }, tooltip: darkTooltip },
      scales: darkScales,
      layout: { padding: 8 }
    }
  });

  // ===== Chart 2: Earnings Trend (line)
  const earningsData = <%- JSON.stringify(earnings) %>;
  const monthLabels = earningsData.map(e => "Month " + e._id);
  const monthTotals = earningsData.map(e => e.total);

  new Chart(document.getElementById("earningsChart"), {
    type: "line",
    data: {
      labels: monthLabels,
      datasets: [{
        label: "Earnings (₹)",
        data: monthTotals,
        borderColor: getCss('--cyan'),
        backgroundColor: getCss('--row'),
        pointBackgroundColor: getCss('--txt'),
        pointBorderColor: getCss('--cyan'),
        pointRadius: 3,
        pointHoverRadius: 4,
        borderWidth: 2,
        tension: 0.35,
        fill: false
      }]
    },
    options: {
      responsive: true,
      maintainAspectRatio: false,
      plugins: { legend: darkLegend, tooltip: darkTooltip },
      scales: darkScales,
      layout: { padding: 8 }
    }
  });
</script>
