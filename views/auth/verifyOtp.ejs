<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Verify Number - FSMS</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
      :root {
        --bg:#000000; --panel:#151821; --row:#1a1d24; --muted:#9aa3b2; --line:#232735;
        --green:#22c55e; --txt:#e8ecf4; --text-300:#a7b0ad; --brand-500: #16da64; --brand-600: #12b754;
        --danger: #ef4444; --surface: #111418; --card: #151821; --cyan: #22d3ee; --blue: #3b82f6; --amber: #f59e0b;
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      }

      body {
        background-color: var(--bg);
        color: var(--txt);
        overflow-x: hidden;
        min-height: 100vh;
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 20px;
      }

      /* Background Styles */
      .auth-background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        overflow: hidden;
        background: linear-gradient(135deg, var(--bg) 0%, var(--surface) 100%);
      }


.grid-lines {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-image: 
        linear-gradient(rgba(33, 13, 212, 0.05) 1px, transparent 2px),
        linear-gradient(90deg, rgba(33, 13, 212, 0.05) 1px, transparent 2px);
    background-size: 40px 40px;
    animation: gridMove 20s linear infinite;
}

.floating-icons {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
}

.floating-icons i {
    position: absolute;
    font-size: 1.5rem;
    color: var(--brand-500);
    opacity: 0.2;
    animation: floatIcon 8s ease-in-out infinite;
}

.floating-icons i:nth-child(1) { top: 20%; left: 10%; animation-delay: 0s; }
.floating-icons i:nth-child(2) { top: 60%; left: 80%; animation-delay: 1s; }
.floating-icons i:nth-child(3) { top: 80%; left: 20%; animation-delay: 2s; }
.floating-icons i:nth-child(4) { top: 40%; left: 90%; animation-delay: 3s; }
.floating-icons i:nth-child(5) { top: 10%; left: 70%; animation-delay: 4s; }
.floating-icons i:nth-child(6) { top: 70%; left: 40%; animation-delay: 5s; }
.floating-icons i:nth-child(7) { top: 45%; left: 12%; animation-delay: 9s; }
.floating-icons i:nth-child(8) { top: 25%; left: 65%; animation-delay: 10.5s; }



.corner-accent {
    position: absolute;
    width: 200px;
    height: 200px;
    background: radial-gradient(circle, var(--brand-500) 0%, transparent 70%);
    opacity: 0.05;
    filter: blur(20px);
}

.corner-accent.top-left {
    top: -100px;
    left: -100px;
}

.corner-accent.bottom-right {
    bottom: -100px;
    right: -100px;
}

@keyframes gridMove {
    0% { transform: translate(0, 0); }
    100% { transform: translate(50px, 50px); }
}

@keyframes floatIcon {
    0%, 100% { transform: translateY(0px) rotate(0deg); opacity: 0.2; }
    50% { transform: translateY(-20px) rotate(180deg); opacity: 0.1; }
}

      /* OTP Container Styles */
      .otp-container {
        width: 100%;
        max-width: 500px;
        background: var(--panel);
        padding: 40px;
        border-radius: 20px;
        box-shadow: 0 20px 50px rgba(0, 0, 0, 0.5);
        position: relative;
        z-index: 10;
        border: 1px solid var(--line);
      }

      .otp-head {
        color: var(--txt);
        font-weight: 700;
        margin-bottom: 8px;
      }

      .otp-sub {
        color: var(--muted);
        margin-bottom: 30px;
        text-align: center;
      }

      /* 6 boxes */
      .otp-grid {
        display: grid;
        grid-template-columns: repeat(6, 48px);
        gap: 10px;
        justify-content: center;
        margin-bottom: 20px;
      }

      .otp-box {
        height: 48px;
        text-align: center;
        font-size: 20px;
        font-weight: 700;
        color: var(--txt);
        background: var(--row);
        border: 1px solid var(--line);
        border-radius: 8px;
        transition: all 0.3s ease;
      }

      .otp-box:focus {
        outline: none;
        border-color: var(--brand-500);
        box-shadow: 0 0 0 0.2rem rgba(22, 218, 100, 0.15);
      }

      .otp-actions .btn-verify {
        background: var(--brand-500);
        color: var(--bg);
        border: none;
        font-weight: 600;
        padding: 12px;
        border-radius: 8px;
        transition: all 0.3s ease;
      }

      .otp-actions .btn-verify:hover {
        background: var(--brand-600);
        transform: translateY(-2px);
      }

      .btn-resend {
        background: transparent;
        color: var(--brand-500);
        border: none;
        font-weight: 500;
      }

      .hint { 
        color: var(--muted); 
        font-size: 0.9rem;
        text-align: center;
      }

      .link-green { 
        color: var(--brand-500); 
        text-decoration: none; 
      }

      .link-green:hover { 
        text-decoration: underline; 
      }

      .alert {
        border: none;
        border-radius: 8px;
        margin-bottom: 20px;
      }

      .alert-success {
        background: rgba(22, 218, 100, 0.15);
        color: var(--brand-500);
        border: 1px solid rgba(22, 218, 100, 0.3);
      }

      .alert-danger {
        background: rgba(239, 68, 68, 0.15);
        color: var(--danger);
        border: 1px solid rgba(239, 68, 68, 0.3);
      }

      .logo-container {
        text-align: center;
        margin-bottom: 30px;
      }

      .logo-icon {
        font-size: 3rem;
        color: var(--brand-500);
        margin-bottom: 10px;
      }

      /* Responsive Design */
      @media (max-width: 576px) {
        .otp-container {
          padding: 30px 20px;
          margin: 10px;
        }
        
        .otp-grid {
          grid-template-columns: repeat(6, 40px);
          gap: 8px;
        }
        
        .otp-box {
          height: 40px;
          font-size: 18px;
        }
        
        body {
          padding: 10px;
        }
      }

      @media (max-width: 768px) {
        .floating-card {
          display: none;
        }
        
        .shape {
          opacity: 0.05;
        }
      }
    </style>
</head>

<body>
  <!-- Background -->
 <div class="auth-background minimal-grid">
    <div class="grid-lines"></div>
    <div class="floating-icons">
        <i class="fas fa-tools"></i>
        <i class="fas fa-map-marker-alt"></i>
        <i class="fas fa-clock"></i>
        <i class="fas fa-chart-line"></i>
        <i class="fas fa-users"></i>
        <i class="fas fa-check-circle"></i>
        <i class="fas fa-cog"></i>
        <i class="fas fa-wrench"></i>
        
    </div>
    <div class="corner-accent top-left"></div>
    <div class="corner-accent bottom-right"></div>
    <div class="pulse-dots">
        <div class="pulse-dot dot-1"></div>
        <div class="pulse-dot dot-2"></div>
        <div class="pulse-dot dot-3"></div>
        <div class="pulse-dot dot-4"></div>
    </div>
</div>

  <!-- Centered OTP Container -->
  <div class="otp-container text-center">
    <div class="logo-container">
      <div class="logo-icon">
        <i class="fas fa-shield-alt"></i>
      </div>
      <h3 class="brand-text">FSMS</h3>
    </div>
    
    <h3 class="otp-head mb-3">Verify Your Account</h3>
    <p class="otp-sub">Enter the 6-digit code sent to your phone</p>

    <% if (typeof message !== "undefined") { %>
      <div class="alert alert-success"><%= message %></div>
    <% } %>
    <% if (typeof error !== "undefined") { %>
      <div class="alert alert-danger"><%= error %></div>
    <% } %>

    <form action="/auth/verifyOtp" method="POST" id="otpForm" novalidate>
      <input type="hidden" name="phone" value="<%= phone %>">
      <input type="hidden" id="otp" name="otp" value="">

      <div class="otp-grid mb-4">
        <input class="otp-box" type="text" inputmode="numeric" pattern="[0-9]*" maxlength="1" aria-label="Digit 1">
        <input class="otp-box" type="text" inputmode="numeric" pattern="[0-9]*" maxlength="1" aria-label="Digit 2">
        <input class="otp-box" type="text" inputmode="numeric" pattern="[0-9]*" maxlength="1" aria-label="Digit 3">
        <input class="otp-box" type="text" inputmode="numeric" pattern="[0-9]*" maxlength="1" aria-label="Digit 4">
        <input class="otp-box" type="text" inputmode="numeric" pattern="[0-9]*" maxlength="1" aria-label="Digit 5">
        <input class="otp-box" type="text" inputmode="numeric" pattern="[0-9]*" maxlength="1" aria-label="Digit 6">
      </div>

      <div class="hint mb-3">This code expires in 10 minutes.</div>

      <div class="mb-4">
        <span class="hint">Didn't receive code? </span>
        <button type="button" class="btn btn-resend p-0 align-baseline link-green" id="resendBtn">Resend OTP</button>
        <span class="hint ms-2" id="countdown" aria-live="polite"></span>
      </div>

      <div class="otp-actions d-grid">
        <button type="submit" class="btn btn-verify btn-lg" id="verifyBtn">
          <i class="fas fa-check-circle me-2"></i>Verify Account
        </button>
      </div>
    </form>
  </div>

  <script>
    // Your existing OTP JavaScript code here
    const boxes = Array.from(document.querySelectorAll('.otp-box'));
    const hiddenOtp = document.getElementById('otp');
    const otpForm = document.getElementById('otpForm');
    const verifyBtn = document.getElementById('verifyBtn');

    boxes.forEach((box, idx) => {
      box.addEventListener('input', e => {
        box.value = (box.value.match(/\d/) || [''])[0];
        if (box.value && idx < boxes.length - 1) boxes[idx + 1].focus();
        buildOtp();
      });
      
      box.addEventListener('keydown', e => {
        if (e.key === 'Backspace' && !box.value && idx > 0) {
          boxes[idx - 1].focus();
        }
      });
      
      box.addEventListener('paste', e => {
        e.preventDefault();
        const text = (e.clipboardData || window.clipboardData).getData('text').replace(/\D/g,'').slice(0, boxes.length);
        text.split('').forEach((d, i) => boxes[i].value = d || '');
        boxes[Math.min(text.length, boxes.length - 1)].focus();
        buildOtp();
      });
    });

    function buildOtp(){
      hiddenOtp.value = boxes.map(b => b.value).join('');
    }

    otpForm?.addEventListener('submit', (e) => {
      if (hiddenOtp.value.length < 6) {
        e.preventDefault();
        alert('Please enter the complete 6-digit code.');
        return;
      }
      verifyBtn.disabled = true;
      verifyBtn.innerHTML = '<i class="fas fa-spinner fa-spin me-2"></i>Verifying...';
    });

    const resendBtn = document.getElementById('resendBtn');
    const countdown = document.getElementById('countdown');
    let cd = 0, timer;

    function startCooldown(sec = 30) {
      cd = sec;
      resendBtn.disabled = true;
      countdown.textContent = `Resend in ${cd}s`;
      clearInterval(timer);
      timer = setInterval(() => {
        cd -= 1;
        countdown.textContent = cd > 0 ? `Resend in ${cd}s` : '';
        if (cd <= 0) { clearInterval(timer); resendBtn.disabled = false; }
      }, 1000);
    }

    resendBtn?.addEventListener('click', async () => {
      try {
        resendBtn.disabled = true;
        resendBtn.textContent = 'Sending...';
        await fetch('/resend-otp', {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ phone: '<%= phone %>' })
        });
        resendBtn.textContent = 'Resend OTP';
        startCooldown(30);
      } catch {
        resendBtn.textContent = 'Resend OTP';
        resendBtn.disabled = false;
        alert('Could not resend code. Please try again.');
      }
    });

    startCooldown(5);
    boxes[0]?.focus();
  </script>
</body>
</html>